name: CI-Linux

on: [push, pull_request, merge_group]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:

    name: stable - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        shell: bash
        run: |
          rustc --version
          cargo --version
          sudo apt-get update
          sudo apt-get install -y libgdal-dev libgeos-dev

      - name: Install protoc
        uses: arduino/setup-protoc@v1

      - name: Format Check
        shell: bash
        run: cargo fmt --all -- --check

      - name: Clippy Check
        shell: bash
        run: cargo clippy --workspace --all-features --bins --examples --tests --benches -- -D warnings

      - name: Tests
        shell: bash
        run: |
          cargo test -p geozero
          cargo test -p geozero --no-default-features
          cargo test --workspace --all-features

      - name: Test Doc Build
        shell: bash
        # Make sure this list matches the members list in Cargo.toml
        run: |
          for package in geozero geozero-shp geozero-cli geozero-bench; do
            (echo "----- Testing doc build for package $package ----" && cargo doc -p $package --all-features --no-deps)
          done
        env:
          RUSTDOCFLAGS: "-D warnings"

      - name: Set up PostgreSQL with PostGIS
        uses: nyurik/action-setup-postgis@v1
        with:
          username: ci
          password: ci
          database: test
          rights: --superuser
          port: 34837
        id: pg

      - name: PostGIS tests
        shell: bash
        run: |
          psql -P pager=off -v ON_ERROR_STOP=1 -f geozero/tests/data/postgis.sql $DATABASE_URL
          cargo test -p geozero --all-features -- --ignored postgis --test-threads 1
        env:
          DATABASE_URL: "${{ steps.pg.outputs.connection-uri }}?sslmode=disable"

