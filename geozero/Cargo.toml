[package]
name = "geozero"
version = "0.9.7"
authors = ["Pirmin Kalberer <pka@sourcepole.ch>"]
edition = "2021"
description = "Zero-Copy reading and writing of geospatial data in WKT/WKB, GeoJSON, MVT, GDAL, and other formats."
homepage = "https://github.com/georust/geozero"
repository = "https://github.com/georust/geozero"
readme = "../README.md"
license = "MIT/Apache-2.0"
keywords = ["geo", "geojson", "gdal", "geos", "postgis"]
categories = ["Geospatial"]

[features]
default = ["with-svg", "with-wkt", "with-geo", "with-geojson"]
with-arrow = ["arrow2"]
with-csv = ["csv", "with-wkt"]
with-gdal = ["gdal", "gdal-sys"]
with-geo = ["geo-types"]
with-geojson = ["geojson"]
with-geos = ["geos"]
with-gpkg = ["with-wkb", "sqlx/sqlite"]
with-gpx = ["gpx"]
with-mvt = ["prost", "prost-build", "dup-indexer"]
with-postgis-diesel = ["with-wkb", "diesel", "byteorder"]
with-postgis-postgres = ["with-wkb", "postgres-types", "bytes"]
with-postgis-sqlx = ["with-wkb", "sqlx/postgres"]
with-svg = []
with-tessellator = ["lyon"]
with-wkb = ["scroll", "with-wkt"]
with-wkt = ["wkt"]

[dependencies]
arrow2 = { version = "0.17", optional = true, features = ["io_ipc"] }
byteorder = { version = "1.4.3", default-features = false, optional = true }
bytes = { version = "1.4", optional = true }
csv = { version = "1.2.1", optional = true }
diesel = { version = "2.0.2", default-features = false, optional = true }
dup-indexer = { version = "0.2", optional = true }
gdal = { version = "0.14", default-features = false, optional = true }
gdal-sys = { version = "0.8", optional = true }
geo-types = { version = "0.7.9", default-features = false, optional = true }
geojson = { version = "0.24.0", default-features = false, optional = true }
geos = { version = "8.1", optional = true }
gpx = { version = "0.8", default-features = false, optional = true }
log = "0.4.17"
lyon = { version = "1.0.1", optional = true }
postgres-types = { version = "0.2", optional = true }
prost = { version = "0.11.0", optional = true }
scroll = { version = "0.11", optional = true }
serde_json = "1.0.79"
sqlx = { version = "0.6", default-features = false, optional = true }
thiserror = "1.0"
wkt = { version = "0.10.0", optional = true }

[dev-dependencies]
diesel = { version = "2.0.2", default-features = false, features = ["postgres"] }
#flatgeobuf = { git = "https://github.com/pka/flatgeobuf", branch="geozero-0.9" }
flatgeobuf = "3.25.0"
geo = "0.24.1"
hex = "0.4"
kdbush = "0.2"
polylabel = "2.4"
postgres = "0.19"
seek_bufread = "1.2"
sqlx = { version = "0.6", default-features = false, features = ["runtime-tokio-native-tls", "macros", "time", "postgres", "sqlite"] }
tokio = { version = "1.27.0", default-features = false, features = ["macros"] }
wkt = "0.10.0"

[build-dependencies]
prost-build = { version = "0.11", optional = true }

[package.metadata.docs.rs]
all-features = true
rustc-args = ["--cfg", "docsrs"]

[[test]]
name = "gdal"
path = "tests/gdal.rs"
required-features = ["with-gdal"]

[[test]]
name = "geojson"
path = "tests/geojson.rs"
required-features = ["with-geojson"]

[[test]]
name = "geopackage"
path = "tests/geopackage.rs"
required-features = ["with-gpkg", "with-wkt", "with-geo"]

[[test]]
name = "geos"
path = "tests/geos.rs"
required-features = ["with-geos"]

[[test]]
name = "geo_types"
path = "tests/geo_types.rs"
required-features = ["with-geo", "with-geojson"]

[[test]]
name = "geozero-api"
path = "tests/geozero-api.rs"
required-features = []

[[test]]
name = "kdbush"
path = "tests/kdbush.rs"
required-features = ["with-geojson"]

[[test]]
name = "mvt"
path = "tests/mvt.rs"
required-features = ["with-mvt"]

[[test]]
name = "polylabel"
path = "tests/polylabel.rs"
required-features = ["with-geo"]

[[test]]
name = "postgis"
path = "tests/postgis.rs"
required-features = ["with-wkb", "with-wkt", "with-geo"]

[[test]]
name = "gpx"
path = "tests/gpx.rs"
required-features = ["with-gpx", "with-wkt", "with-geojson"]

[[test]]
name = "svg"
path = "tests/svg.rs"
required-features = ["with-svg"]
